openapi: 3.0.3
info:
  title: Redis User & Event API
  version: "1.0.0"
  description: REST API for managing users and events

paths:
  /api/v1/users:
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"

  /api/v1/users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        '404':
          description: Not found
    put:
      summary: Update user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
    delete:
      summary: Delete user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted

  /api/v1/events:
    post:
      summary: Create an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDto"
      responses:
        '200':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDto"

  /api/v1/events/{id}:
    get:
      summary: Get event by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDto"
        '404':
          description: Not found
    put:
      summary: Update event
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDto"
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDto"
    delete:
      summary: Delete event
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted

components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
        events:
          type: array
          items:
            type: string
    EventDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
